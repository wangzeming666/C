字符串常量是一个字符数组,例如:
"I am a string"
在字符串的内部表示中,字符数组以空字符'\0'结尾,所以,程序可以通过检查空字符找到
字符数组的结尾。字符串常量占据的存储单元数也因此比双引号内的字符数大 1。

当类似于这样的一个字符串出现在程序中时,实际上是通过字符指针访问该字符串的。在上
述语句中,printf 接受的是一个指向字符数组第一个字符的指针。也就是说,字符串常量可
通过一个指向其第一个元素的指针访问。
除了作为函数参数外,字符串常量还有其它用法。假定指针 pmessage 的声明如下:
char *pmessage;
那么,语句
pmessage ="now is the time";
将把一个指向该字符数组的指针赋值给 pmessage。该过程并没有进行字符串的复制,而只
是涉及到指针的操作。C 语言没有提供将整个字符串作为一个整体进行处理的运算符。
下面两个定义之间有很大的差别:
char amessage[] = "nw is the time"; /* 定义一个数组 */
char *pmessage = "now is the time"; /* 定义一个指针 */
上述声明中,amessage 是一个仅仅足以存放初始化字符串以及空字符'\0'的一维数组。数
组中的单个字符可以进行修改,
但 amessage 始终指向同一个存储位置。
另一方面,
pmessage 是一个指针,其初值指向一个字符串常量,之后它可以被修改以指向其它地址,但如果试图
修改字符串的内容,结果是没有定义的。

