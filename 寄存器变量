  外部的 static 声明通常多用于变量,当然,它也可用于声明函数。通常情况下,函数
名字是全局可访问的,对整个程序的各个部分而言都可见。但是,如果把函数声明为 static
类型,则该函数名除了对该函数声明所在的文件可见外,其它文件都无法访问。
static 也可用于声明内部变量。static 类型的内部变量同自动变量一样,是某个特定
函数的局部变量,只能在该函数中使用,但它与自动变量不同的是,不管其所在函数是否被
调用,它一直存在,而不像自动变量那样,随着所在函数的被调用和退出而存在和消失。换
句话说, static 类型的内部变量是一种只能在某个特定函数中使用但一直占据存储空间的变
量。

  实际使用时,底层硬件环境的实际情况对寄存器变量的使用会有一些限制。每个函数中
只有很少的变量可以保存在寄存器中,且只允许某些类型的变量。但是,过量的寄存器声明
并没有什么害处,这是因为编译器可以忽略过量的或不支持的寄存器变量声明。另外,无论
寄存器变量实际上是不是存放在寄存器中,它的地址都是不能访问的。在不同的机器中,对寄存器
变量的数目和类型的具体限制也是不同的。
