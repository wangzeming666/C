(下面这一段是书上的原文）
&tab[-1]和&tab[n]都超出了数组 tab 的范围。前者是绝对非法的,
而对后者的间接引用也是非法的。但是,C 语言的定义保证数组末尾之后的第一个元素(即
&tab[n])的指针算术运算可以正确执行。

不要认为结构的长度等于各成员长度的和。因为不同的对象有不同的对齐要
求,所以,结构中可能会出现未命名的“空穴“
(hole) 。例如,假设 char 类型占用一个字节,
int 类型占用 4 个字节,则下列结构:
struct {
char c;
int i;
};
可能需要 8 个字节的存储空间,而不是 5 个字节。使用 sizeof 运算符可以返回正确的对象
长度。

最后,说明一点程序的格式问题:当函数的返回值类型比较复杂时(如结构指针)
,例如
struct key *binsearch(char *word, struct key *tab, int n)
很难看出函数名,也不太容易使用文本编辑器找到函数名。我们可以采用另一种格式书写上
述语句:
struct key *
binsearch(char *word, struct key *tab, int n)
